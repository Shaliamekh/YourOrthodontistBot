from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

import config
from utils.closest_clinic import closest_clinic


async def cmd_start(message: types.Message):
    msg = '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç <b>–æ—Ä—Ç–æ–¥–æ–Ω—Ç–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω—ã –ë–∞—Ö—É—Ä</b>.\n\n' \
          '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –º–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã, –∞–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–π –∫ –í–∞–º –∫–ª–∏–Ω–∏–∫–∏ –≤ –≥.–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ, ' \
          '–≤ –∫–æ—Ç–æ—Ä–æ–π —è –º–æ–≥—É –í–∞—Å –ø—Ä–∏–Ω—è—Ç—å, –∞ —Ç–∞–∫–∂–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.\n\n' \
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤–Ω–∏–∑—É ‚¨á'
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(types.KeyboardButton(text='–ë–ª–∏–∂–∞–π—à–∞—è –∫–ª–∏–Ω–∏–∫–∞ üó∫', request_location=True))
    keyboard.row('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º üìÖ')
    await message.answer(msg, reply_markup=keyboard)


async def cmd_cancel(message: types.Message, state: FSMContext):
    await state.finish()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(types.KeyboardButton(text='–ë–ª–∏–∂–∞–π—à–∞—è –∫–ª–∏–Ω–∏–∫–∞ üó∫', request_location=True))
    keyboard.row('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º üìÖ')
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=keyboard)


async def getting_location(message: types.Message):
    user_location = str(message.location.latitude) + ',' + str(message.location.longitude)
    print(user_location)
    clinic, time = await closest_clinic(user_location, config.clinics)
    r = f'–ö–∞—Ä—Ç—ã –Ω–∞–º –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —Å–µ–π—á–∞—Å –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤—Å–µ–≥–æ –≤ {time} –º–∏–Ω—É—Ç–∞—Ö –µ–∑–¥—ã –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ ' \
        f'–æ—Ç –∫–ª–∏–Ω–∏–∫–∏ {clinic}.'
    await message.answer(r)


def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start", state="*")
    dp.register_message_handler(cmd_cancel, commands="cancel", state="*")
    dp.register_message_handler(getting_location, content_types=types.ContentType.LOCATION)
