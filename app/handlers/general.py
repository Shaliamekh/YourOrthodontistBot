from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from os import path
from app.utils.closest_clinic import closest_clinic
from app.utils.db import get_clinics, visitors_list
from app.markups import main_menu


async def cmd_start(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤–Ω–∏–∑—É ‚¨á', reply_markup=main_menu)
    visitors_list(message.from_user.first_name, message.from_user.last_name, message.from_user.id)


async def cmd_menu(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ–Ω—é –≤–Ω–∏–∑—É ‚¨á ", reply_markup=main_menu)


async def getting_location(message: types.Message):
    user_location = str(message.location.latitude) + ',' + str(message.location.longitude)
    print(user_location)
    clinic, time = await closest_clinic(user_location, get_clinics())
    r = f'üìç –ö–∞—Ä—Ç—ã –Ω–∞–º –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —Å–µ–π—á–∞—Å –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤—Å–µ–≥–æ –≤ {time} –º–∏–Ω—É—Ç–∞—Ö –µ–∑–¥—ã –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ ' \
        f'–æ—Ç –∫–ª–∏–Ω–∏–∫–∏ {clinic}.\n\n–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–π –∏ –¥—Ä—É–≥–∏—Ö –∫–ª–∏–Ω–∏–∫–∞—Ö –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ "–í—Å–µ –∫–ª–∏–Ω–∏–∫–∏ üè•" –≤ –º–µ–Ω—é ‚¨á'
    print(user_location)
    await message.answer(r)



async def about_doctor(message: types.Message):
    msg = '–Ø —è–≤–ª—è—é—Å—å –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–º —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–æ–º-–æ—Ä—Ç–æ–¥–æ–Ω—Ç–æ–º —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã 5 –ª–µ—Ç.\n\nüéì –û–∫–æ–Ω—á–∏–ª–∞ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π ' \
          '—Ñ–∞–∫—É–ª—å—Ç–µ—Ç –ö—É–±–ì–ú–£ –≤ 2016 –≥–æ–¥—É, –ø–æ–ª—É—á–∏–ª–∞ –¥–∏–ø–ª–æ–º –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ¬´–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è¬ª, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—à–ª–∞ –≤—Å–µ ' \
          '—ç—Ç–∞–ø—ã –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é ¬´–í—Ä–∞—á-—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥¬ª. –í–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ä–¥–∏–Ω–∞—Ç—É—Ä—ã –≤ 2016-2018 –≥–≥. ' \
          '–ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ¬´–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è¬ª –æ—Å—É—â–µ—Å—Ç–≤–ª—è–ª–∞ –ø—Ä–∏—ë–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –±–∞–∑–µ –∫–∞—Ñ–µ–¥—Ä—ã –¥–µ—Ç—Å–∫–æ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏, ' \
          '–æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏–∏ –∏ —á–µ–ª—é—Å—Ç–Ω–æ-–ª–∏—Ü–µ–≤–æ–π —Ö–∏—Ä—É—Ä–≥–∏–∏. C 2016 –≥–æ–¥–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–≤—ã—à–∞—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é, –ø–æ—Å–µ—â–∞—è –ª–µ–∫—Ü–∏–∏ ' \
          '–∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è.' \
          '\n\n–ü—Ä–æ—Ñ–∏–ª—å –ª–µ—á–µ–Ω–∏—è:' \
          '\n‚úÖ –º–µ–∑–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–∫—É—Å' \
          '\n‚úÖ –¥–∏—Å—Ç–∞–ª—å–Ω—ã–π –ø—Ä–∏–∫—É—Å' \
          '\n‚úÖ –∞–Ω–æ–º–∞–ª–∏—è –∑—É–±–∞' \
          '\n‚úÖ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –ø—Ä–æ—Ä–µ–∑—ã–≤–∞–Ω–∏—è –∑—É–±–æ–≤' \
          '\n‚úÖ –¥–∏—Å—Ç–æ–ø–∏—è –∑—É–±–∞'
    photo = types.InputFile(path.dirname(__file__) + '/../media/profile.png')
    await message.answer_photo(photo, caption=msg)
    
    
async def work_results(message: types.Message):
    await types.ChatActions.upload_photo()
    media = types.MediaGroup()
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/7.jpg'), '–ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å')
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/6.jpg'),
                       '–ê –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å —Ç—ã –≤–ø–µ—Ä–≤—ã–µ —Å–∫–∞–∑–∞–ª–∞, —á—Ç–æ –ª—é–±–∏—à—å –º–µ–Ω—è')
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/5.jpg'),
                       '–ì–æ–≤–æ—Ä–∏–ª–∞, —á—Ç–æ –Ω–µ –ø—Ä–∏–µ–¥–µ—à—å, –Ω–æ –ø—Ä–∏–µ—Ö–∞–ª–∞')
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/4.jpg'),
                       '–¢—É—Ç —è —Ç–µ–±—è —É–∂–µ –º–Ω–æ–≥–æ —Å –∫–µ–º –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª')
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/1.jpeg'), '–ú—ã –ø—Ä–æ—Å—Ç–æ –æ—á–µ–Ω—å –º–∏–ª—ã–µ')
    media.attach_photo(types.InputFile(path.dirname(__file__) + '/../media/3.jpeg'),
                       '–ü–æ–∑–∞–ø—Ä–æ—à–ª—ã–π —è–Ω–≤–∞—Ä—å. –û—Ç —Å–ª–æ–≤–∞ "–ø–æ–∑–∞–ø—Ä–æ—à–ª—ã–π" —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–ª–æ—Ö–æ')
    await message.answer('–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –º–æ–∏—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –¥–æ –∏ –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞ –ª–µ—á–µ–Ω–∏—è ü¶∑\n\n'
                         '–ü–æ–¥ –∫–∞–∂–¥—ã–º —Ñ–æ—Ç–æ - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ —Ö–æ–¥–µ –ª–µ—á–µ–Ω–∏—è')
    await message.answer_media_group(media=media)


def register_handlers_general(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start", state="*")
    dp.register_message_handler(cmd_menu, commands="menu", state="*")
    dp.register_message_handler(getting_location, content_types=types.ContentType.LOCATION)
    dp.register_message_handler(about_doctor, Text(equals='–û –≤—Ä–∞—á–µ üë©‚Äç‚öï'))
    dp.register_message_handler(work_results, Text(equals='–î–æ –∏ –ø–æ—Å–ª–µ üòÅ'))
